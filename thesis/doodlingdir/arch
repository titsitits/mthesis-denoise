class Hul144Disc(nn.Module):
    def __init__(self, input_channels = 3, self.funit = 32):
        super(Hul144Disc, self).__init__()
        self.funit = self.funit
        self.enc144to142std = nn.Sequential(
            nn.Conv2d(3, 2*funit, 3),
            #nn.BatchNorm2d(4*funit),
            nn.PReLU(),
        )
        self.enc142to138std = nn.Sequential(
            nn.Conv2d(2*funit, 2*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
            nn.Conv2d(2*funit, 2*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc138to134std = nn.Sequential(
            nn.Conv2d(4*funit, 3*funit, 3, bias=False),
            #nn.BatchNorm2d(3*funit),
            nn.PReLU(),
            nn.Conv2d(3*funit, 3*funit, 3, bias=False),
            #nn.BatchNorm2d(3*funit),
            nn.PReLU(),
        )
        self.enc142to138dil = nn.Sequential(
            nn.Conv2d(2*funit, 2*funit, 3, dilation=2, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc138to134dil = nn.Sequential(
            nn.Conv2d(4*funit, 3*funit, 3, dilation=2, bias=False),
            #nn.BatchNorm2d(3*funit),
            nn.PReLU(),
        )
        self.enc144to134dil = nn.Sequential(
            nn.Conv2d(3, 2*funit, 3, dilation=5, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc134to132std = nn.Sequential(
            nn.Conv2d(8*funit, 2*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc132to44str = nn.Sequential(
            nn.Conv2d(6*funit, 4*funit, 3, stride=3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc44to40std = nn.Sequential(
            nn.Conv2d(4*funit, 2*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
            nn.Conv2d(2*funit, 2*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc40to36std = nn.Sequential(
            nn.Conv2d(4*funit, 2*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
            nn.Conv2d(2*funit, 2*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )

        self.enc44to40dil = nn.Sequential(
            nn.Conv2d(4*funit, 2*funit, 3, dilation=2, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc40to36dil = nn.Sequential(
            nn.Conv2d(4*funit, 2*funit, 3, dilation=2, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc36to12str = nn.Sequential(
            nn.Conv2d(4*funit, 4*funit, 3, stride=3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )

        self.enc12to8std = nn.Sequential(
            nn.Conv2d(4*funit, 4*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
            nn.Conv2d(2*funit, 2*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc8to4std = nn.Sequential(
            nn.Conv2d(8*funit, 4*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
            nn.Conv2d(4*funit, 4*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )

        self.enc12to8dil = nn.Sequential(
            nn.Conv2d(4*funit, 4*funit, 3, dilation=2, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.enc8to4dil = nn.Sequential(
            nn.Conv2d(8*funit, 4*funit, 3, dilation=2, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        
        self.enc4to2std = nn.Sequential(
            nn.Conv2d(8*funit, 4*funit, 3, bias=False),
            #nn.BatchNorm2d(2*funit),
            nn.PReLU(),
        )
        self.decide = nn.Sequential(
            nn.Conv2d(4*funit, 1, 2),
            nn.Sigmoid()
        )
